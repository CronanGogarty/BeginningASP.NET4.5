using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.IO;
using System.Xml;

namespace BeginningASP.NET4._5.FilesAndStreams
{
    public partial class XMLWriter : System.Web.UI.Page
    {

        string filePath, errorMessage, result;
        bool errorRaised;
        FileStream fs;
        XmlTextWriter w;
        XmlTextReader r;
        StringWriter writer;


        protected void Page_Load(object sender, EventArgs e)
        {
            //define the file to create and write to
            filePath = Path.Combine(Request.PhysicalApplicationPath, @"FilesAndStreams\Files\WriteXML.xml");

        }

        protected void Page_PreRender(object sender, EventArgs e)
        {
            if (result != "")
            {
                lblResult.Text = result;
            }
            if (errorRaised)
            {
                lblErrorMessage.Text = errorMessage;
            }
        }

        protected void cmdWriteXML_Click(object sender, EventArgs e)
        {
            lblXMLOutput.Text = "";

            try
            {
                fs = new FileStream(filePath, FileMode.Create); //the file will be overwritten if it already exists
                w = new XmlTextWriter(fs, null);

                // Set it to indent output.
                w.Formatting = Formatting.Indented;
                // Set the number of indent spaces.
                w.Indentation = 5;

                w.WriteStartDocument();
                w.WriteStartElement("SuperProProductList");
                w.WriteComment("This file generated by the XmlTextWriter class.");

                // Write the first product.
                w.WriteStartElement("Product");
                w.WriteAttributeString("ID", "1");
                w.WriteAttributeString("Name", "Chair");
                w.WriteStartElement("Price");
                w.WriteString("49.33");
                w.WriteEndElement();
                w.WriteEndElement();

                // Write the second product.
                w.WriteStartElement("Product");
                w.WriteAttributeString("ID", "2");
                w.WriteAttributeString("Name", "Car");
                w.WriteStartElement("Price");
                w.WriteString("43399.55");
                w.WriteEndElement();
                w.WriteEndElement();

                // Close the root element.
                w.WriteEndElement();
                w.WriteEndDocument();
                w.Close();

                result = "XML File was written to: " + filePath;
                cmdReadXML.Visible = true;
            }
            catch (Exception ex)
            {
                System.Diagnostics.Debug.Print("*************************EXCEPTION************************");
                System.Diagnostics.Debug.Print(ex.Message);

                errorMessage = ex.Message;
                errorRaised = true;
            }
            finally
            {
                if (fs!=null)
                {
                    fs.Close();
                }
                
            }

        }

        protected void cmdReadXML_Click(object sender, EventArgs e)
        {
            fs = new FileStream(filePath, FileMode.Open);
            r = new XmlTextReader(fs);
            writer = new StringWriter();

            try
            {
                while (r.Read())
                {
                    // Skip whitespace.
                    if (r.NodeType == XmlNodeType.Whitespace) continue;

                    writer.Write("<b>Type:</b> ");
                    writer.Write(r.NodeType.ToString());
                    writer.Write("<br>");

                    // The name is available when reading the opening and closing tags
                    // for an element. It’s not available when reading the inner content.
                    if (r.Name != "")
                    {
                        writer.Write("<b>Name:</b> ");
                        writer.Write(r.Name);
                        writer.Write("<br>");
                    }

                    // The value is when reading the inner content.
                    if (r.Value != "")
                    {
                        writer.Write("<b>Value:</b> ");
                        writer.Write(r.Value);
                        writer.Write("<br>");
                    }

                    if (r.AttributeCount > 0)
                    {
                        writer.Write("<b>Attributes:</b> ");
                        for (int i = 0; i < r.AttributeCount; i++)
                        {
                            writer.Write(" ");
                            writer.Write(r.GetAttribute(i));
                            writer.Write(" ");
                        }
                        writer.Write("<br>");
                    }
                    writer.Write("<br>");

                    lblXMLOutput.Text = writer.ToString();
                }
            }
            catch (Exception ex)
            {
                System.Diagnostics.Debug.Print("*************************EXCEPTION************************");
                System.Diagnostics.Debug.Print(ex.Message);

                errorMessage = ex.Message;
                errorRaised = true;
            }
            finally
            {
                fs.Close();
                cmdReadXML.Visible = false;
            }
        }
    }
}